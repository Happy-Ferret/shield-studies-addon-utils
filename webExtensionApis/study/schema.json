[
  {
    "namespace": "study",
    "description": "Interface for Shield and Pioneer studies.",
    "apiVersion": 5,
    "types": [
      {
        "id": "studySetup",
        "type": "object",
        "properties": {
          "activeExperimentName": {
            "type": "string"
          },
          "studyType": {
            "type": "string",
            "enum": [
              "shield",
              "pioneer"
            ]
          },
          "expire": {
            "type": "object",
            "properties": {
              "days": {
                "type": "integer"
              }
            }
          },
          "endings": {
            "type": "array"
          },
          "weightedVariations": {
            "type": "array"
          },
          "logLevel": {
            "type": "integer",
            "minimum": 0
          },
          "telemetry": {
            "type": "object",
            "properties": {
              "send": {
                "type": "boolean"
              },
              "removeTestingFlag": {
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "activeExperimentName",
          "studyType",
          "endings",
          "weightedVariations",
          "logLevel",
          "telemetry"
        ],
        "additionalProperties": {},
        "testcase": {
          "activeExperimentName": "aStudy",
          "studyType": "shield",
          "expire": {
            "days": 10
          },
          "endings": [],
          "logLevel": 30,
          "weightedVariations": [
            {
              "name": "feature-active",
              "weight": 1.5
            }
          ],
          "telemetry": {
            "send": false,
            "removeTestingFlag": false
          }
        }
      },
      {
        "id": "weightedVariations",
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "weight": {
              "type": "number",
              "minimum": 0
            }
          },
          "required": [
            "name",
            "weight"
          ]
        },
        "testcase": [
          {
            "name": "feature-active",
            "weight": 1.5
          }
        ]
      },
      {
        "id": "anEnding",
        "type": "object",
        "additionalProperties": true,
        "testcase": {
          "baseUrls": [
            "some.url"
          ],
          "endingName": "anEnding",
          "endingClass": "ended-positive"
        }
      },
      {
        "id": "filterTelemetryQuery",
        "type": "object",
        "properties": {
          "type": {
            "type": [
              "array"
            ],
            "items": {
              "type": "string"
            }
          },
          "n": {
            "type": "integer"
          },
          "mininumTimestamp": {
            "type": "number"
          },
          "headersOnly": {
            "type": "boolean"
          }
        },
        "testcase": {
          "type": [
            "shield-study-addon",
            "shield-study"
          ],
          "n": 100,
          "minimumTimestamp": 1523968204184,
          "headersOnly": false
        }
      }
    ],
    "functions": [
      {
        "name": "setup",
        "type": "function",
        "async": true,
        "description": "Attempt an setup/enrollment, with these effects:\n\n- sets 'studyType' as Shield or Pioneer\n  - affects telemetry\n  - watches for dataPermission changes that should *always*\n    stop that kind of study\n\n- Use or choose variation\n  - `testing.variation` if present\n  - OR deterministicVariation\n    for the studyType using `weightedVariations`\n\n- During firstRun[1] only:\n  - set firstRunTimestamp pref value\n  - send 'enter' ping\n  - if `allowEnroll`, send 'install' ping\n  - else endStudy(\"ineligible\") and return\n\n- Every Run\n  - setActiveExperiment(studySetup)\n  - monitor shield | pioneer permission endings\n  - suggests alarming if `expire` is set.\n\nReturns:\n- info object (see `info`)\n\nTelemetry Sent (First run only)\n\n  - enter\n  - install\n\nFires Events\n\n(At most one of)\n- study:ready  OR\n- study:endStudy\n\nPreferences set\n- `shield.${runtime.id}.firstRunTimestamp`\n\nNote:\n1. allowEnroll is ONLY used during first run (install)\n",
        "parameters": [
          {
            "name": "studySetup",
            "$ref": "studySetup"
          }
        ]
      },
      {
        "name": "endStudy",
        "type": "function",
        "async": true,
        "defaultReturn": {
          "urls": [
            "url1",
            "url2"
          ],
          "endingName": "some-reason"
        },
        "description": "Signal to browser.study that it should end.\n\nUsage scenarios:\n- addons defined\n  - postive endings (tried feature)\n  - negative endings (client clicked 'no thanks')\n  - expiration / timeout (feature should last for 14 days then uninstall)\n\nLogic:\n- If study has already ended, do nothing.\n- Else: END\n\nEND:\n- record internally that study is ended.\n- disable all methods that rely on configuration / setup.\n- clear all prefs stored by `browser.study`\n- fire telemetry pings for:\n  - 'exit'\n  - the ending, one of:\n\n    \"ineligible\",\n    \"expired\",\n    \"user-disable\",\n    \"ended-positive\",\n    \"ended-neutral\",\n    \"ended-negative\",\n\n- augment all ending urls with query urls\n- fire 'study:end' event to `browser.study.onEndStudy` handlers.\n\nAddon should then do\n- open returned urls\n- feature specific cleanup\n- uninstall the addon\n\nNote:\n1.  calling this function multiple time is safe.\n`browser.study` will choose the\n",
        "parameters": [
          {
            "name": "anEndingAlias",
            "type": [
              "string",
              "null"
            ]
          },
          {
            "name": "anEndingObject",
            "type": "object",
            "optional": true
          }
        ]
      },
      {
        "name": "info",
        "type": "function",
        "async": true,
        "description": "current study configuration, including\n- variation\n- activeExperimentName\n- timeUntilExpire\n- firstRunTimestamp\n\nBut not:\n- telemetry clientId\n\nThrows Error if called before `browser.study.setup`\n",
        "defaultReturn": {
          "variation": "styleA",
          "firstRunTimestamp": 1523968204184,
          "activeExperimentName": "some experiment",
          "timeUntilExpire": null
        },
        "parameters": []
      },
      {
        "name": "getDataPermissions",
        "type": "function",
        "async": true,
        "description": "object of current dataPermissions with keys shield, pioneer, telemetry, 'ok'",
        "defaultReturn": {
          "shield": true,
          "pioneer": false,
          "telemetry": true,
          "alwaysPrivateBrowsing": false
        },
        "parameters": []
      },
      {
        "name": "sendTelemetry",
        "type": "function",
        "description": "Send Telemetry using appropriate shield or pioneer methods.\n\nshield:\n- `shield-study-addon` ping, requires object string keys and string values\n\npioneer:\n- TBD\n\nNote:\n- no conversions / coercion of data happens.\n\nNote:\n- undefined what happens if validation fails\n- undefined what happens when you try to send 'shield' from 'pioneer'\n\nTBD fix the parameters here.\n",
        "async": true,
        "parameters": [
          {
            "name": "payload",
            "type": "object"
          }
        ],
        "defaultReturn": "undefined"
      },
      {
        "name": "filterTelemetry",
        "type": "function",
        "async": true,
        "description": "Filter locally stored telemetry pings using these fields (if set)\n\nn:\n  if set, no more than `n` pings.\ntype:\n  Array of 'ping types' (e.g., main, crash, shield-study-addon) to filter\nmininumTimestamp:\n  only pings after this timestamp.\nheadersOnly:\n  boolean.  If true, only the 'headers' will be returned.\n\nPings will be returned sorted by timestamp with most recent first.\n\nUsage scenarios:\n- enrollment / eligiblity using recent Telemetry behaviours or client environment\n- addon testing scenarios\n",
        "defaultReturn": [
          {
            "pingType": "main"
          }
        ],
        "parameters": [
          {
            "name": "filterTelemetryQuery",
            "$ref": "filterTelemetryQuery"
          }
        ]
      },
      {
        "name": "deterministicVariation",
        "description": "Choose a element from `weightedVariations` array\nbased on various hashes of clientId\n\n- shield:  TBD\n- pioneer: TBD\n",
        "type": "function",
        "async": true,
        "defaultReturn": "styleA",
        "parameters": [
          {
            "name": "weightedVariations",
            "$ref": "weightedVariations"
          },
          {
            "name": "algorithm",
            "type": "string",
            "enum": [
              "shield",
              "pioneer"
            ]
          }
        ]
      },
      {
        "name": "surveyUrl",
        "type": "function",
        "async": true,
        "description": "Format url with study covariate queryArgs appended / mixed in.\n\nUse this for constructing midpoint surveys.\n",
        "defaultReturn": "https://example.com?version=59.0&branch=studyA",
        "parameters": [
          {
            "name": "baseUrl",
            "type": "string"
          },
          {
            "name": "additionalFields",
            "type": "object",
            "optional": true
          }
        ]
      },
      {
        "name": "validateJSON",
        "type": "function",
        "async": true,
        "defaultReturn": {
          "valid": true,
          "errors": []
        },
        "description": "Using AJV, do jsonschema validation of an object.  Can be used to validate your arguments, packets at client.",
        "parameters": [
          {
            "name": "someJson",
            "type": "object"
          },
          {
            "name": "jsonschema",
            "type": "object",
            "descripton": "a valid jsonschema object"
          }
        ]
      }
    ],
    "events": [
      {
        "name": "onDataPermissionsChange",
        "type": "function",
        "defaultReturn": {
          "shield": true,
          "pioneer": false
        },
        "description": "Fires whenever any 'dataPermission' changes, with the new dataPermission object.  Allows watching for shield or pioneer revocation.",
        "parameters": [
          {
            "name": "updatedPermissions",
            "type": "object"
          }
        ]
      },
      {
        "name": "onReady",
        "type": "function",
        "defaultReturn": {
          "variation": "styleA",
          "firstRunTimestamp": 1523968204184
        },
        "description": "Fires when the study is 'ready' for the feature to startup.",
        "parameters": [
          {
            "name": "studyInfo",
            "type": "object"
          }
        ]
      },
      {
        "name": "onEndStudy",
        "type": "function",
        "defaultReturn": {
          "urls": [],
          "reason": "some-reason"
        },
        "description": "Listen for when the study wants to end",
        "parameters": [
          {
            "name": "endingSteps",
            "type": "object"
          }
        ]
      }
    ]
  }
]
