# Interface schema
# https://firefox-source-docs.mozilla.org/toolkit/components/extensions/webextensions/schema.html
# possible types are here
# - https://searchfox.org/mozilla-central/source/toolkit/components/extensions/Schemas.jsm#2418-2426
#
# - properties
# - functions
# - events
# - types
#
# - type property:
#   boolean, integer, number, string, array, object, or any.
#

# TODO
# - add json schema types
# - do we want to expose any of the sampling / hashing stuff?
# - mention / decide how to handle all
---
- namespace: study
  description: Interface for Shield and Pioneer studies.
  apiVersion: 5  # for dev use
  types:   # TODO @glind to actually get this back out of the schemas.json
  - name: studySetup
    type: object
    properties:
      activeExperimentName:
        type: string
      studyType:
        type: { "enum": ["shield", "pioneer"] }
      expire:
        type: 'object'
        properties:
          days:
      endings:
        type: "array"
      weightedVariations:
        type: "array"
      logLevel:
        type: "integer"
      telemetry:
        type: object
        properties:
          send:
            type: boolean
          removeTestingFlag:
            type: boolean

    required:
    - activeExperimentName
    - studyType
    - expire
    - endings
    - weightedVariations
    - logLevel
    - telemetry
    additionalProperties: {"type": "any" }
  - id: weightedVariations
    type: array
  - id: anEnding
    type: object
    additionalProperties: {"type": "any" }

  functions:
  - name: setup
    type: function
    async: true
    description: |
      Attempt an setup/enrollment, with these effects:

      - sets 'studyType' as Shield or Pioneer
        - affects telemetry
        - watches for dataPermission changes that should *always*
          stop that kind of study

      - Use or choose variation
        - `testing.variation` if present
        - OR deterministicVariation
          for the studyType using `weightedVariations`

      - During firstRun[1] only:
        - set firstrunTimestamp pref value
        - send 'enter' ping
        - if `allowEnroll`, send 'install' ping
        - else endStudy("ineligible") and return

      - Every Run
        - setActiveExperiment(studyConfig)
        - monitor shield | pioneer permission endings
        - suggests alarming if `expire` is set.

      Returns:
      - info object (see `info`)

      Telemetry Sent

      Fires Events

      (At most one of)
      - study:ready  OR
      - study:endStudy

      Prefs set
      - first run

      Note:
      1. first run is evaluated based on a pref
      2. allowEnroll is ONLY used during first run (install)

    returns:  info
    parameters:
    - name: studyConfig
      $ref: studyConfig # TODO, for now, making progress up above

  - name: endStudy
    type: function
    async: true
    defaultReturn: {urls: ['url1','url2'], endingName:'some-reason'}
    description: Optionally opens url, then ends study with pings ending, exit.  Study can only have one ending.  Uninstalls addon?
    parameters:
    - name: anEndingName
      type: ['string', 'null']
    - name: anEndingObject
      type: object
      optional: true
    # should be anEnding Object
    returns: directions for what to do next by the addon

  ## study / client information things
  - name: info
    type: function
    async: true
    description: |
      current study configuration, including
      - variation
      - activeExperimentName
      - timeUntilExpire
      - firstrunTimestamp

      But not:
      - telemetry clientId

      Throws Error if called before `browser.study.setup`

    defaultReturn: {variation: "styleA"}  # TODO add rest
    parameters: []

  - name: getDataPermissions
    type: function
    async: true
    description: object of current dataPermissions with keys shield, pioneer, telemetry, 'ok'
    defaultReturn: {shield: true, pioneer: false, telemetry: true}
    parameters: []

  # telemetry related things
  - name: sendTelemetry
    type: function
    async: true
    parameters:
    - name: payload
      type: object  # TODO copy existing?
    - name: pingType
      type: string
    defaultReturn: undefined  # exception if out of policy based on config
    returns:  Nothing

  - name: getTelemetry
    type: function
    async: true
    description:  for isEligible, testing, and other uses, get recent stored Telemetry pings
    defaultReturn: [{pingType: 'main'}]
    returns:  Array of Telemetry pings
    parameters:
    - name: telemetrySelectionOptions
      type: any
      description: `{ type, n, minTimestamp, headersOnly }`

  # utilities
  - name: deterministicVariation
    type: function
    async: true
    defaultReturn: "styleA"
    returns: Name of a variation from weightedVariations
    parameters:
    - name: weightedVariations
      type: object
    - name: algorithm
      type: string
    - name: fraction
      type: Number
      optional: true

  - name: surveyUrl
    type: function
    async: true
    description : |
      Format url with study covariate queryArgs appended / mixed in.

      Use this for constructing midpoint surveys.

    defaultReturn: 'https://example.com?version=59.0&branch=studyA'
    parameters:
    - name: baseUrl
      type: string
    - name: additionalFields
      type: object
      optional: true

  - name: validateJSON
    type: function
    async: true
    defaultReturn: {valid: true, errors: []}
    description:  Using AJV, do jsonschema validation of an object.  Can be used to validate your arguments, packets at client.
    returns: a validation object - { bool valid, array errors }
    parameters:
    - name: someJson
      type: object
    - name: jsonschema
      type: object  # a jsonschema
      descripton: a valid jsonschema object

  # things that would be 'listeners' are 'events' in webExtensions
  # https://github.com/motin/shield-studies-addon-template/blob/convert-to-webextension-experiments/src/privileged/introductionNotificationBar/api.js#L107
  # https://github.com/motin/shield-studies-addon-template/blob/convert-to-webextension-experiments/src/privileged/introductionNotificationBar/schema.json#L15

  # https://firefox-source-docs.mozilla.org/toolkit/components/extensions/webextensions/background.html#javascript-apis
  # https://firefox-source-docs.mozilla.org/toolkit/components/extensions/webextensions/events.html
  # https://dxr.mozilla.org/mozilla-central/source/toolkit/components/extensions/parent/ext-runtime.js#41
  # https://searchfox.org/mozilla-central/source/toolkit/components/extensions/ExtensionCommon.jsm#1671
  events:
  - name: onDataPermissionsChange
    type: function
    defaultReturn: {shield: true, pioneer: false}
    description: Fires whenever any 'dataPermission' changes, with the new dataPermission object.  Allows watching for shield or pioneer revocation.
    parameters:  # for the callback
    - name: updatedPermissions
      type: object

  - name: onReady
    type: function
    defaultReturn: {variation: 'styleA', install_timestamp: 1523968204184}
    description: Fires when the study is 'ready' for the feature to startup.
    parameters:  # for the callback
    - name: studyInfo
      type: object

  - name: onEndStudy
    type: function
    defaultReturn: {urls: [], reason: 'some-reason'}
    description: Listen for when the study wants to end
    parameters:  # for the callback
    - name: endingSteps
      type: object
